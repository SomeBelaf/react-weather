{"version":3,"sources":["theme.js","components/GeolocationApi.jsx","components/WeatherApi.jsx","components/LoadingDots.jsx","components/Header/Header.jsx","components/Card/Card.jsx","components/Context.jsx","components/CardList/CardsList.jsx","components/Background.jsx","App.js","index.js"],"names":["theme","createMuiTheme","palette","type","primary","main","info","background","paper","overrides","MuiCssBaseline","html","overflow","overflowX","width","GeolocationApi","useState","geoError","handleGeoError","navigator","geolocation","getCurrentPosition","position","localStorage","setItem","JSON","stringify","lat","window","btoa","coords","latitude","lon","longitude","error","code","WeatherApi","weatherData","getWeatherData","fetchError","handleFetchError","isLoading","setIsLoading","getDays","daysToAdd","arrOfDays","startDate","Date","weekdays","i","currentDate","setDate","getDate","push","getDay","convertData","data","arr","convertedData","map","item","curentWeather","weather","tempDay","Math","round","feels_like","day","tempNight","night","windSpeed","wind_speed","clouds","humidity","rain","snow","icon","index","weatherRequest","a","fetch","response","json","daily","message","getDataFromLocStorage","getItem","gettingUserLocation","parse","atob","useStyles","makeStyles","root","height","dots","display","backgroundColor","borderRadius","animation","transitions","easing","easeInOut","firstDot","animationDelay","secondDot","from","opacity","to","LoadingDots","props","classes","join","Grid","container","alignItems","justify","wrap","className","header","flexDirection","breakpoints","up","paddingTop","spacing","paddingLeft","logoWrapper","marginBottom","form","loadingErrorWrapper","marginTop","color","warning","light","Header","xs","sm","lg","direction","style","fontSize","Typography","variant","onSubmit","e","preventDefault","TextField","label","id","defaultValue","size","disabled","Button","Box","align","minWidth","padding","flexOne","flex","temp","Card","propTypes","PropTypes","number","humidit","cloud","weatherDesc","string","WetherCard","handleCardDescr","onMouseEnter","CardContent","justif","src","alt","DescrContext","createContext","DescrProvider","cardDescr","providerValue","useMemo","Provider","value","children","cardList","top","transform","CardsList","useContext","cards","key","wrapper","zIndex","left","bgImage","right","bottom","margin","minHeight","HandleWeatherDescr","indexOf","App","Container","maxWidth","disableGutters","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.59fa2df1.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\r\n// изменённые стили\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      main: \"#dcdfe3\"\r\n    },\r\n    info: {\r\n      main: \"#c2c2c2\",\r\n    },\r\n    background:{\r\n      paper: '#242424'\r\n    },\r\n  },\r\n  // убрать скролл по горизонтали\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      \"@global\": {\r\n        html: {\r\n          overflow: \"scroll\",\r\n          overflowX: \"hidden\",\r\n          \"& ::-webkit-scrollbar\": {\r\n            width: \"0px\",\r\n            background: \"transparent\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport default theme;\r\n","import { useState } from \"react\";\r\n\r\nfunction GeolocationApi() {\r\n  const [geoError, handleGeoError] = useState(\"\");\r\n  // получение геолокации пользователя, и запись её в localStorage\r\n  navigator.geolocation.getCurrentPosition(\r\n    (position) => {\r\n      localStorage.setItem(\r\n        \"userLocation\",\r\n        JSON.stringify({\r\n          lat: window.btoa(position.coords.latitude),\r\n          lon: window.btoa(position.coords.longitude)\r\n        })\r\n      );\r\n    },\r\n    // если пользователь не включил геолокацию, вывести ошибку\r\n    (error) => {\r\n      if (error.code === 1) {\r\n        handleGeoError(\"Turn on geolocation\");\r\n      }\r\n    }\r\n  );\r\n\r\n\r\n\r\n  return { geoError };\r\n}\r\nexport default GeolocationApi;\r\n","import { useState } from \"react\";\r\n\r\nfunction WeatherApi() {\r\n  const [weatherData, getWeatherData] = useState(null);\r\n  const [fetchError, handleFetchError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  /*\r\n   * функция определяющая какой день у пользователя,\r\n   * возвращает массив с днями недели\r\n   */\r\n  const getDays = (daysToAdd) => {\r\n    let arrOfDays = [];\r\n    let startDate = new Date();\r\n    let weekdays = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ];\r\n    for (let i = 0; i < daysToAdd; i++) {\r\n      let currentDate = new Date();\r\n      currentDate.setDate(startDate.getDate() + i);\r\n      arrOfDays.push(weekdays[currentDate.getDay()]);\r\n    }\r\n\r\n    return arrOfDays;\r\n  };\r\n  /*\r\n   * перевод полученных данных в нужный формат\r\n   */\r\n  const convertData = (data, arr) => {\r\n    const convertedData = data.map((item) => {\r\n      return {\r\n        curentWeather: item.weather[0].main,\r\n        tempDay: Math.round(item.feels_like.day),\r\n        tempNight: Math.round(item.feels_like.night),\r\n        windSpeed: Math.round(item.wind_speed * 3.6), // convert from m/s to km/h\r\n        clouds: item.clouds,\r\n        humidity: item.humidity,\r\n        rain: item.rain,\r\n        snow: item.snow,\r\n        icon: `http://openweathermap.org/img/wn/${item.weather[0].icon}@2x.png`,\r\n        day: \"\",\r\n      };\r\n    });\r\n\r\n    arr.map((item, index) => {\r\n      return (convertedData[index].day = item);\r\n    });\r\n\r\n    getWeatherData({ weatherData: convertedData });\r\n  };\r\n  /*\r\n   * функция делающая запрос на сервер\r\n   */\r\n  const weatherRequest = async (lat, lon) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(\r\n        ` https:///api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&exclude=current,minutely,hourly&appid=116d6fc2fb80fd747f9da1487879c958`\r\n      );\r\n      const data = await response.json();\r\n\r\n      convertData(data.daily, getDays(8));\r\n    } catch (error) {\r\n      handleFetchError(error.message);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n  /*\r\n   * получение геолокации с localStorage,\r\n   * и отправка запроса с данными пользователя\r\n   */\r\n  const getDataFromLocStorage = () => {\r\n    if (localStorage.getItem(\"userLocation\") !== null) {\r\n      const gettingUserLocation = JSON.parse(\r\n        localStorage.getItem(\"userLocation\")\r\n      );\r\n      weatherRequest(\r\n        window.atob(gettingUserLocation.lat),\r\n        window.atob(gettingUserLocation.lon)\r\n      );\r\n    } else {\r\n      handleFetchError(\"Something went wrong, reload page.\");\r\n    }\r\n  };\r\n\r\n  return {\r\n    getDataFromLocStorage,\r\n    fetchError,\r\n    isLoading,\r\n    weatherData,\r\n  };\r\n}\r\n\r\nexport default WeatherApi;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n  \r\n// анимация загрузки\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"13px\",\r\n    height: \"13px\"\r\n  },\r\n  dots: {\r\n    display: \"block\",\r\n    backgroundColor: \"#fff\",\r\n    width: \"3px\",\r\n    height: \"3px\",\r\n    borderRadius: \"50%\",\r\n    background: \"transparent\",\r\n    animation: `$animate 0.8s ${theme.transitions.easing.easeInOut} infinite  alternate`\r\n  },\r\n  firstDot: {\r\n    animationDelay: \"0.4s\"\r\n  },\r\n  secondDot: {\r\n    animationDelay: \"0.2s\"\r\n  },\r\n  \"@keyframes animate\": {\r\n    from: {\r\n      opacity: 0\r\n    },\r\n    to: {\r\n      opacity: 1\r\n    }\r\n  }\r\n}));\r\n\r\nfunction LoadingDots(props) {\r\n  const classes = useStyles();\r\n  let firstDot = [classes.dots, classes.firstDot].join(\" \");\r\n  let secondDot = [classes.dots, classes.secondDot].join(\" \");\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      alignItems=\"center\"\r\n      justify=\"space-between\"\r\n      wrap=\"nowrap\"\r\n      className={classes.root}\r\n    >\r\n      <Grid item>\r\n        <span className={firstDot} />\r\n      </Grid>\r\n      <Grid item>\r\n        <span className={secondDot} />\r\n      </Grid>\r\n      <Grid item>\r\n        <span className={classes.dots} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default LoadingDots;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport LoadingDots from \"../LoadingDots\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FilterDramaTwoToneIcon from \"@material-ui/icons/FilterDramaTwoTone\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n//СТИЛИ\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      flexDirection: \"row\",\r\n      alignItems: \"flex-start\",\r\n      paddingTop: theme.spacing(2),\r\n      paddingLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  logoWrapper: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  form: {\r\n    flexDirection: \"column\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      alignItems: \"center\",\r\n      flexDirection: \"row\",\r\n    },\r\n  },\r\n  loadingErrorWrapper: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  geoError: {\r\n    color: theme.palette.warning.light,\r\n  },\r\n  fetchError: {\r\n    color: theme.palette.error.light,\r\n  },\r\n}));\r\n\r\nfunction Header(props) {\r\n  const classes = useStyles();\r\n  // запрос на сервер\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.weatherRequest();\r\n  };\r\n\r\n  return (\r\n    <Grid container justify=\"flex-start\" className={classes.header}>\r\n      <Grid\r\n        item\r\n        container\r\n        xs={6}\r\n        sm={2}\r\n        lg={1}\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        className={classes.logoWrapper}\r\n      >\r\n        <FilterDramaTwoToneIcon style={{ fontSize: \"4.1875rem\" }} />\r\n        <Typography variant=\"h4\">LOGO</Typography>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <form onSubmit={handleSubmit}>\r\n          <Grid container className={classes.form} spacing={2}>\r\n            <Grid item>\r\n              <TextField\r\n                label=\"City\"\r\n                id=\"city\"\r\n                defaultValue=\"\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                disabled\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                label=\"Country\"\r\n                id=\"country\"\r\n                defaultValue=\"\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                disabled\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Button variant=\"contained\" type=\"submit\">\r\n                Get weather\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n          <Box className={classes.loadingErrorWrapper}>\r\n            {props.isLoading ? (\r\n              <Grid container alignItems=\"baseline\" spacing={1}>\r\n                <Grid item>\r\n                  <Typography align=\"left\">Loading</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <LoadingDots />\r\n                </Grid>\r\n              </Grid>\r\n            ) : null}\r\n            {props.geoError !== \"\" || props.fetchError !== \"\" ? (\r\n              <>\r\n                <Typography className={classes.geoError}>\r\n                  {props.geoError}\r\n                </Typography>\r\n                <Typography className={classes.fetchError}>\r\n                  {props.fetchError}\r\n                </Typography>\r\n              </>\r\n            ) : null}\r\n          </Box>\r\n        </form>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  weatherRequest: PropTypes.func.isRequired,\r\n  fetchError: PropTypes.string.isRequired,\r\n  geoError: PropTypes.string.isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Brightness2TwoToneIcon from \"@material-ui/icons/Brightness2TwoTone\";\r\nimport Brightness5TwoToneIcon from \"@material-ui/icons/Brightness5TwoTone\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//СТИЛИ\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    minWidth: \"350px\",\r\n    padding: theme.spacing(2)\r\n  },\r\n  flexOne: {\r\n    flex: 1\r\n  },\r\n  temp: {\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction WetherCard({\r\n  tempDay,\r\n  tempNight,\r\n  humidit,\r\n  windSpeed,\r\n  cloud,\r\n  weatherDesc,\r\n  day,\r\n  icon,\r\n  handleCardDescr\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid item className={classes.root} onMouseEnter={handleCardDescr}>\r\n      <Card>\r\n        <CardContent>\r\n          <Grid container direction=\"column\" alignItems=\"center\" spacing={1}>\r\n            <Grid container item alignItems=\"flex-start\" justif=\"space-between\">\r\n              <Grid item className={classes.flexOne}>\r\n                <Typography variant=\"h5\">{day}</Typography>\r\n              </Grid>\r\n              <img src={icon} alt={weatherDesc} />\r\n            </Grid>\r\n            <Grid container item justify=\"space-evenly\" alignItems=\"center\">\r\n              <Grid container item xs={3} alignItems=\"center\">\r\n                <Brightness5TwoToneIcon className={classes.flexOne} />\r\n                <Typography variant=\"h5\">{tempDay}°C</Typography>\r\n              </Grid>\r\n              <Grid container item xs={3} alignItems=\"center\">\r\n                <Brightness2TwoToneIcon className={classes.flexOne} />\r\n                <Typography variant=\"h5\">{tempNight}°C</Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item justify=\"space-around\">\r\n              <Grid item>\r\n                <Typography variant=\"subtitle1\">Humidit {humidit}%</Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"subtitle1\">\r\n                  Wind speed {windSpeed} km/h\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  tempDay: PropTypes.number,\r\n  tempNight: PropTypes.number,\r\n  humidit: PropTypes.number,\r\n  windSpeed: PropTypes.number,\r\n  cloud: PropTypes.number,\r\n  weatherDesc: PropTypes.string,\r\n  day: PropTypes.string\r\n};\r\n\r\nexport default WetherCard;\r\n","import React, { useState, createContext, useMemo } from \"react\";\r\n\r\nconst DescrContext = createContext();\r\n// контекст необходимый для Background, получает описание погоды с Cards\r\nconst DescrProvider = props => {\r\n  const [cardDescr, handleCardDescr] = useState(\"\");\r\n  const providerValue = useMemo(() => ({ cardDescr, handleCardDescr }), [\r\n    cardDescr,\r\n    handleCardDescr\r\n  ]);\r\n\r\n  return (\r\n    <DescrContext.Provider value={providerValue}>\r\n      {props.children}\r\n    </DescrContext.Provider>\r\n  );\r\n};\r\n\r\nexport { DescrContext, DescrProvider };\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Card from \"../Card/Card\";\r\nimport { DescrContext } from \"../Context\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n//СТИЛИ\r\nconst useStyles = makeStyles(theme => ({\r\n  cardList: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    overflowX: \"auto\",\r\n    background: \"transparent\",\r\n    flexDirection: \"column\",\r\n\r\n    \"&::-webkit-scrollbar \": {\r\n      height: \"10px\"\r\n    },\r\n    /* Track */\r\n    \"&::-webkit-scrollbar-track\": {\r\n      background: \"#f1f1f1\"\r\n    },\r\n    /* Handle */\r\n    \"&::-webkit-scrollbar-thumb\": {\r\n      background: \"#888\"\r\n    },\r\n    /* Handle on hover */\r\n    \" &::-webkit-scrollbar-thumb:hover\": {\r\n      background: \"#555\"\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      flexDirection: \"row\",\r\n      transform: \"translateY(-50%)\"\r\n    }\r\n  }\r\n}));\r\n\r\nfunction CardsList({ data }) {\r\n  const classes = useStyles();\r\n\r\n  const { handleCardDescr } = useContext(DescrContext);\r\n  let cards = null;\r\n  if (data) {\r\n    cards = data.weatherData.map((item, index) => {\r\n      return (\r\n        <Card\r\n          key={index}\r\n          handleCardDescr={() => handleCardDescr(item.curentWeather)}\r\n          tempDay={item.tempDay}\r\n          tempNight={item.tempNight}\r\n          humidit={item.humidity}\r\n          windSpeed={item.windSpeed}\r\n          cloud={item.cloud}\r\n          weatherDesc={item.curentWeather}\r\n          day={item.day}\r\n          icon={item.icon}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      container\r\n      xs={12}\r\n      alignItems=\"center\"\r\n      wrap=\"nowrap\"\r\n      className={classes.cardList}\r\n    >\r\n      {cards}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nCardsList.propTypes = {\r\n  data: PropTypes.object\r\n};\r\n\r\nexport default CardsList;\r\n","import React, { useContext } from \"react\";\r\nimport { DescrContext } from \"./Context\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//СТИЛИ\r\nconst useStyles = makeStyles((theme) => ({\r\n  wrapper: {\r\n    zIndex: -1,\r\n    position: \" fixed\",\r\n    top: \"-50%\",\r\n    left: \"-50%\",\r\n    width: \"200%\",\r\n    height: \"200%\",\r\n  },\r\n  bgImage: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    margin: \"auto\",\r\n    minWidth: \"50%\",\r\n    minHeight: \"50%\",\r\n  },\r\n}));\r\n\r\nexport default function HandleWeatherDescr(props) {\r\n  const classes = useStyles();\r\n\r\n  const { cardDescr } = useContext(DescrContext);\r\n\r\n  // Массив с описаниями погоды\r\n  const WeatherCondition = [\r\n    \"Thunderstorm\",\r\n    \"Drizzle\",\r\n    \"Rain\",\r\n    \"Snow\",\r\n    \"Mist\",\r\n    \"Smoke\",\r\n    \"Haze\",\r\n    \"Dust\",\r\n    \"Fog\",\r\n    \"Sand\",\r\n    \"Ash\",\r\n    \"Squall\",\r\n    \"Tornado\",\r\n    \"Clear\",\r\n    \"Clouds\",\r\n  ];\r\n  /**\r\n   * НИ В КОЕМ СЛУЧАЕ НЕ МЕНЯТЬ ПОСЛЕДОВАТЕЛЬНОСТЬ В МАССИВЕ\r\n   */\r\n  const arrOfImage = [\r\n    \"https://i.ibb.co/18dttN0/thunderstorm.jpg\", //thunderstorm\r\n    \"https://i.ibb.co/qgWNwKp/drizzle.jpg\", // drizzle\r\n    \"https://i.ibb.co/0mgjL6w/rain.jpg\", // rain\r\n    \"https://i.ibb.co/PYXPySp/snow.jpg\", // snow\r\n    \"https://i.ibb.co/P6hDWBJ/mist.jpg\", //mist\r\n    \"https://i.ibb.co/P6hDWBJ/mist.jpg\", //mist\r\n    \"https://i.ibb.co/P6hDWBJ/mist.jpg\", //mist\r\n    \"https://i.ibb.co/rMf24q3/dust.jpg\", //dust\r\n    \"https://i.ibb.co/P6hDWBJ/mist.jpg\", //mist\r\n    \"https://i.ibb.co/rMf24q3/dust.jpg\", //dust\r\n    \"https://i.ibb.co/rMf24q3/dust.jpg\", //dust\r\n    \"https://i.ibb.co/BKpRgMd/squall.jpg\", // squall\r\n    \"https://i.ibb.co/PtmKL0T/tornado.jpg\", //tornado\r\n    \"https://i.ibb.co/1qgB3Vt/clear.jpg\", //clear\r\n    \"https://i.ibb.co/pzFpgTv/clouds.jpg\", //cloud\r\n  ];\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <img\r\n        className={classes.bgImage}\r\n        alt=''\r\n        src={arrOfImage[WeatherCondition.indexOf(cardDescr)] || 'https://i.ibb.co/BKpRgMd/squall.jpg'}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport GeolocationApi from \"./components/GeolocationApi\";\r\nimport WeatherApi from \"./components/WeatherApi\";\r\nimport Header from \"./components/Header/Header\";\r\nimport CadsList from \"./components/CardList/CardsList\";\r\nimport { DescrProvider } from \"./components/Context\";\r\nimport Background from \"./components/Background\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n//СТИЛИ\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"relative\",\r\n    height: \"100vh\"\r\n  }\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  const { geoError } = GeolocationApi();\r\n  const {\r\n    fetchError,\r\n    isLoading,\r\n    weatherData,\r\n    getDataFromLocStorage\r\n  } = WeatherApi();\r\n  \r\n  return (\r\n    <Container maxWidth=\"xl\" disableGutters className={classes.root}>\r\n      <Header\r\n        weatherRequest={getDataFromLocStorage}\r\n        fetchError={fetchError}\r\n        geoError={geoError}\r\n        isLoading={isLoading}\r\n      />\r\n      <DescrProvider>\r\n        <CadsList data={weatherData} />\r\n        <Background />\r\n      </DescrProvider>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport theme from \"./theme\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}